// Generated by Dagger (https://dagger.dev).
package com.example.core.data.remote.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.example.core.data.remote.di.ApiKeyQualifier")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class NetworkModule_ProvideApiKeyFactory implements Factory<String> {
  @Override
  public String get() {
    return provideApiKey();
  }

  public static NetworkModule_ProvideApiKeyFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static String provideApiKey() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApiKey());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideApiKeyFactory INSTANCE = new NetworkModule_ProvideApiKeyFactory();
  }
}
